name: Build & Push Docker Image

on:
  push:
    branches:
      - master

env:
  IMAGE_NAME: novoa97/client-tracker

jobs:
  build-and-push:
    environment: master
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Skip if commit is version bump
        run: |
          LAST_COMMIT=$(git log -1 --pretty=%B)
          echo "Ãšltimo commit: $LAST_COMMIT"
          if [[ "$LAST_COMMIT" == "ci: version bump"* ]]; then
            echo "Commit is a version bump. Skipping..."
            exit 0
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Install dependencies
        run: npm ci

      - name: Apply pending version bump (changesets)
        run: npx changeset version

      - name: Extract version from package.json
        id: version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Version is $VERSION"

      - name: Commit and push version bump
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          git add package.json package-lock.json CHANGELOG.md .changeset
          git commit -m "ci: version bump" || echo "No changes to commit"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git push || echo "No push needed"

      - name: Create Git tag from version
        env:
          VERSION: ${{ env.VERSION }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG="v$VERSION"
          echo "Creating tag $TAG"
          git tag $TAG
          git push origin $TAG

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build Docker image
        run: |
          docker build -t $IMAGE_NAME:${{ env.VERSION }} .
          docker tag $IMAGE_NAME:${{ env.VERSION }} $IMAGE_NAME:latest

      - name: Push Docker image
        run: |
          docker push $IMAGE_NAME:${{ env.VERSION }}
          docker push $IMAGE_NAME:latest

      - name: Extract last release notes from CHANGELOG.md
        id: changelog
        run: |
          awk '/^## /{n++} n==2{exit} {if(n==1)print}' CHANGELOG.md > .release-notes.md
          echo "Changelog:"
          cat .release-notes.md

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.VERSION }}
          name: Release v${{ env.VERSION }}
          body_path: .release-notes.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
